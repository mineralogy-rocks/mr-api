###########
# BUILDER #
###########

# pull official base image
FROM python:3.8.3-alpine as builder

# set work directory
WORKDIR /app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev libffi-dev make libevent-dev build-base

# install dependencies
COPY src/requirements/base.txt src/requirements/base.txt
COPY src/requirements/server.txt src/requirements/server.txt
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /app/wheels -r src/requirements/server.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.8.3-alpine

# create directory for the app user
RUN mkdir -p /home/backend

# create the app user
RUN addgroup -S backend && adduser -S backend -G backend

# create the appropriate directories
ENV HOME=/home/backend
ENV APP_HOME=/home/backend/web
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq gcc python3-dev musl-dev libffi-dev make libevent-dev build-base
COPY --from=builder /app/wheels /wheels
COPY --from=builder /app/src/requirements /requirements
RUN pip install --no-cache /wheels/*


# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R backend:backend $APP_HOME

# change to the app user
USER backend
