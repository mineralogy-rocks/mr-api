# This is a workflow which builds image and deploys to DO

name: CI/CD pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]

    paths:
      - '.github/workflows/**'
      - 'k8s/**'
      - 'Dockerfile.prod'
      - 'src/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  BACKEND_IMAGE: registry.digitalocean.com/mr-project/backend:latest

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains two jobs: build and deploy afterwards
  build:
    name: Build Docker Images
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout master
        uses: actions/checkout@v2

      - name: Set environment variables
        run: |
          echo "BACKEND_IMAGE=$(echo ${{env.BACKEND_IMAGE}} )" >> $GITHUB_ENV

      # install doctl for accessing DO registry
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITAL_OCEAN_ACCESS_TOKEN }}

      # login into DO registry
      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 800

      # pull images
      - name: Pull images
        run: |
          docker pull ${{ env.BACKEND_IMAGE }} || true

      # build images
      - name: Build images
        run: |
          docker build -f $GITHUB_WORKSPACE/Dockerfile.prod -t ${{ env.BACKEND_IMAGE }} .

      # push images
      - name: Push images
        run: |
          docker push ${{ env.BACKEND_IMAGE }}

  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'

    steps:
    
      - name: Checkout master
        uses: actions/checkout@v2

      - name: Set environment variable
        run: |
          echo "BACKEND_IMAGE=$(echo ${{env.BACKEND_IMAGE}} )" >> $GITHUB_ENV

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 800 ${{ secrets.DIGITAL_OCEAN_KUBERNETES_CLUSTER_ID }}

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/k8s/do/deployment.yaml

      - name: Verify deployment
        run: kubectl rollout status deployment/mr-api

