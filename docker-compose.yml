version: "3"
services:

    nginx-dev: # A Web Server
        container_name: nginx-dev
        restart: unless-stopped
        image: nginx:stable-alpine
        ports:
            - "80:80"
        command: > 
            /bin/sh -c "envsubst '$${DOMAIN}' < /etc/nginx/nginx.template > /etc/nginx/nginx.conf && exec nginx -g 'daemon off;'"
        env_file:
            - ./.dev.env
        volumes:
            - ./nginx/dev/nginx.template:/etc/nginx/nginx.template:ro

            - ./nginx/_data/log:/var/log/nginx
            - ./nginx/_data/media:/var/www/media
            - ./nginx/_data/static:/var/www/static

    database: # Local Development Database
        container_name: database
        image: postgres:13
        restart: unless-stopped
        ports:
            - "5432:5432"
        volumes:
            - ./db/services/dump_db.sh:/dump_db.sh:ro
            - ./db/services/restore_db.sh:/restore_db.sh:ro

            - database-data:/var/lib/postgresql/data/
            - ./db/backup:/backup
            - ./sql/:/sql
        env_file:
            - ./.dev.env

    backend: # The back-end of the project
        container_name: backend
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        # command: gunicorn wsgi:application --pythonpath 'src' --bind 0.0.0.0:8000 --worker-class=gevent --worker-connections=1000 --workers=5 --log-level debug
        # command: python manage.py runserver 0.0.0.0:8000
        env_file:
            - ./.dev.env
        ports:
            - "8000:8000"
        volumes:
            - .:/app

            - ./nginx/_data/media:/app/media
            - ./nginx/_data/static:/app/static

volumes:
    database-data: