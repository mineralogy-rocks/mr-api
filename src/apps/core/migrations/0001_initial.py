# Generated by Django 3.1 on 2020-09-27 14:10

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CountriesList',
            fields=[
                ('country_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('alpha_2', models.CharField(max_length=10, null=True)),
                ('alpha_3', models.CharField(max_length=10, null=True)),
                ('country_code', models.IntegerField(null=True)),
                ('region', models.CharField(max_length=100, null=True)),
                ('sub_region', models.CharField(max_length=100, null=True)),
                ('intermediate_region', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'countries_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MsSpecies',
            fields=[
                ('mineral_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('mineral_name', models.CharField(max_length=200, unique=True)),
                ('formula', models.TextField(blank=True, null=True)),
                ('ions', models.JSONField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('ns_class', models.SmallIntegerField(blank=True, null=True)),
                ('ns_subclass', models.CharField(blank=True, max_length=1, null=True)),
                ('ns_family', models.CharField(blank=True, max_length=1, null=True)),
                ('ns_mineral', models.CharField(blank=True, max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ms_species',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MsSpeciesCountries',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('note', models.TextField(db_column='note', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ms_species_countries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MsSpeciesRelations',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('relation_note', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ms_species_relations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MsSpeciesStatus',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ms_species_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NsClass',
            fields=[
                ('id_class', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'ns_class',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NsFamily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_class', models.SmallIntegerField()),
                ('id_subclass', models.CharField(max_length=1)),
                ('id_family', models.CharField(max_length=4)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'ns_family',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NsSubclass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_class', models.SmallIntegerField()),
                ('id_subclass', models.CharField(max_length=1)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'ns_subclass',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelationsList',
            fields=[
                ('relation_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=200)),
                ('note', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'relations_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatusesList',
            fields=[
                ('status_id', models.FloatField(primary_key=True, serialize=False)),
                ('description_short', models.CharField(max_length=100)),
                ('description_long', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'statuses_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MsSpeciesHistory',
            fields=[
                ('mineral_id', models.OneToOneField(db_column='mineral_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='history', serialize=False, to='api.msspecies')),
                ('discovery_year_min', models.IntegerField(null=True)),
                ('discovery_year_max', models.IntegerField(null=True)),
                ('discovery_year_note', models.TextField(null=True)),
                ('first_usage_date', models.TextField(null=True)),
                ('first_known_use', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ms_species_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GrHierarchy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group_id', models.ForeignKey(db_column='group_id', on_delete=django.db.models.deletion.CASCADE, related_name='group', to='api.msspecies')),
                ('mineral_id', models.ForeignKey(db_column='mineral_id', on_delete=django.db.models.deletion.CASCADE, related_name='mineral', to='api.msspecies')),
                ('root_id', models.ForeignKey(db_column='root_id', on_delete=django.db.models.deletion.CASCADE, related_name='root', to='api.msspecies')),
                ('serie_id', models.ForeignKey(db_column='serie_id', on_delete=django.db.models.deletion.CASCADE, related_name='serie', to='api.msspecies')),
                ('subgroup_id', models.ForeignKey(db_column='subgroup_id', on_delete=django.db.models.deletion.CASCADE, related_name='subgroup', to='api.msspecies')),
                ('supergroup_id', models.ForeignKey(db_column='supergroup_id', on_delete=django.db.models.deletion.CASCADE, related_name='supergroup', to='api.msspecies')),
            ],
            options={
                'db_table': 'gr_hierarchy',
                'managed': (False,),
            },
        ),
    ]
